name: CI Checks

on:
  pull_request:
    branches:
      - main


jobs:
  check-pr-version:
    name: Bump package version
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9"]
        poetry-version: ["1.2.2"]

    steps:
      - name: Extract branch name for pull request
        id: pr-trigger
        run: echo "::set-output name=branch_name::$(echo ${GITHUB_HEAD_REF})"

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # Checkout main and get the poetry version.
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Get main package version
        id: main-version
        run: echo "::set-output name=version::$(echo `poetry version`)"

      # Checkout the PR branch and get the poetry version.
      - name: Echo PR branch name
        run: echo "Checking out branch " ${{steps.pr-trigger.outputs.branch_name}}
      - name: Checkout PR branch
        uses: actions/checkout@v3
      - name: Get PR package version
        id: pr-version
        run: echo "::set-output name=version::$(echo `poetry version`)"

      # Fail if main and PR branch have the same version - it needs to be bumped.
      - name: Echo package versions
        run: echo "main:" " " ${{steps.main-version.outputs.version}} ", PR:" " " ${{steps.pr-version.outputs.version}}
      - name: Check PR version is bumped
        if: steps.main-version.outputs.version == steps.pr-version.outputs.version
        run: echo "PR has not bumped version from main" && exit 1


  code-quality:
    name: Code quality
    runs-on: ubuntu-latest
    needs: check-pr-version

    strategy:
      matrix:
        python-version: ["3.9"]
        poetry-version: ["1.2.2"]

    steps:
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Run poetry install
        run: poetry install
      - name: Run precommit for code quality checks
        run: poetry run pre-commit run --all-files -v